{
  "name": "vscode-plpgsql-lsp",
  "displayName": "PostgreSQL Language Server",
  "description": "VSCode PostgreSQL and PL/pgSQL Language Server.",
  "license": "MIT",
  "version": "2.11.3",
  "icon": "images/postgres.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/UniqueVision/plpgsql-lsp"
  },
  "publisher": "uniquevision",
  "categories": [],
  "keywords": [
    "postgres",
    "Postgres",
    "PostgreSQL",
    "PL",
    "plpgsql",
    "PL/pgSQL",
    "Language Server"
  ],
  "engines": {
    "vscode": "^1.68.0"
  },
  "activationEvents": [
    "onLanguage:postgres",
    "onCommand:plpgsql-lsp.executeFileQuery",
    "onCommand:plpgsql-lsp.validateWorkspace"
  ],
  "main": "./client/out/extension",
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
    "build:dev": "npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js",
    "tsc": "tsc --noEmit --project ./tsconfig.json && npm run tsc:client && npm run tsc:server",
    "tsc:client": "tsc --noEmit --project ./client/tsconfig.json",
    "tsc:server": "tsc --noEmit --project ./server/tsconfig.json",
    "compile": "tsc -b",
    "compile:client": "tsc -b ./client/tsconfig.json",
    "compile:server": "tsc -b ./server/tsconfig.json",
    "watch": "webpack --watch",
    "package:linux": "vsce package --target linux-x64",
    "package:mac": "vsce package --target darwin-x64",
    "package:windows": "vsce package --target win32-x64",
    "lint": "eslint ./client/src ./server/src --ext .ts,.tsx --fix",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "test": "cd server && npm run test && cd ..",
    "test:ci": "cd server && npm run test:ci && cd ..",
    "clean": "rimraf client/out && rimraf server/out"
  },
  "contributes": {
    "commands": [
      {
        "command": "plpgsql-lsp.executeFileQuery",
        "title": "PL/pgSQL: Execute the Current File Query"
      },
      {
        "command": "plpgsql-lsp.validateWorkspace",
        "title": "PL/pgSQL: Validate the Workspace Files"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "plpgsql-lsp.executeFileQuery",
          "when": "editorLangId == postgres"
        },
        {
          "command": "plpgsql-lsp.validateWorkspace",
          "when": "editorLangId == postgres"
        }
      ]
    },
    "languages": [
      {
        "id": "postgres",
        "extensions": [
          ".pgsql",
          ".psql"
        ],
        "aliases": [
          "Postgres"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "postgres",
        "scopeName": "source.pgsql",
        "path": "./syntaxes/pgsql.tmLanguage"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "PostgreSQL connection configuration",
      "properties": {
        "plpgsqlLanguageServer.host": {
          "scope": "resource",
          "type": "string",
          "default": "localhost",
          "description": "Your database host."
        },
        "plpgsqlLanguageServer.port": {
          "scope": "resource",
          "type": "number",
          "default": 5432,
          "description": "Your database port."
        },
        "plpgsqlLanguageServer.database": {
          "scope": "resource",
          "type": "string",
          "nullable": true,
          "description": "Your database name."
        },
        "plpgsqlLanguageServer.user": {
          "scope": "resource",
          "type": "string",
          "nullable": true,
          "description": "Your database user."
        },
        "plpgsqlLanguageServer.password": {
          "scope": "resource",
          "type": "string",
          "nullable": true,
          "description": "Your database password."
        },
        "plpgsqlLanguageServer.definitionFiles": {
          "scope": "resource",
          "type": "array",
          "default": [
            "**/*.psql",
            "**/*.pgsql"
          ],
          "description": "The pattern list of the definition files.",
          "items": {
            "type": "string"
          }
        },
        "plpgsqlLanguageServer.defaultSchema": {
          "scope": "resource",
          "type": "string",
          "default": "public",
          "description": "Default schema name."
        },
        "plpgsqlLanguageServer.validateOn": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "save",
            "change"
          ],
          "default": "change",
          "description": "Specify when to validate files. Default: 'change'"
        },
        "plpgsqlLanguageServer.queryParameterPattern": {
          "scope": "resource",
          "type": "string",
          "default": "\\$[1-9][0-9]*",
          "description": "Query parameter pattern. the pattern is described by regular expression."
        },
        "plpgsqlLanguageServer.keywordQueryParameterPattern": {
          "scope": "resource",
          "type": "array",
          "default": [],
          "description": "Keyword query parameter patterns. Patterns must include \"{keyword}\", as in \"@{keyword}\".",
          "items": {
            "type": "string"
          }
        },
        "plpgsqlLanguageServer.statements": {
          "properties": {
            "separatorPattern": {
              "scope": "resource",
              "type": "string",
              "required": true,
              "example": "-- name:[\\s]+.*",
              "description": "Prepared statement separator regex pattern."
            },
            "diagnosticsLevels": {
              "scope": "resource",
              "type": "object",
              "default": null,
              "description": "Override diagnostic levels for statements.",
              "properties": {
                "disableFlag": {
                  "scope": "resource",
                  "type": "string",
                  "default": "disable",
                  "enum": [
                    "disable",
                    "warning"
                  ],
                  "description": "Set diagnostic level for the disabled validation flag."
                }
              }
            }
          },
          "default": null,
          "scope": "resource",
          "type": "object",
          "description": "If set, multiple statements in a file can be analyzed based on a separator."
        },
        "plpgsqlLanguageServer.migrations": {
          "properties": {
            "upFiles": {
              "scope": "resource",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Up migrations file glob pattern. Executed by sorted filename order.",
              "required": true,
              "example": [
                "*.up.pgsql"
              ]
            },
            "downFiles": {
              "scope": "resource",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Down migrations file glob pattern. Executed by sorted filename order.",
              "required": true,
              "example": [
                "*.down.pgsql"
              ]
            },
            "postMigrationFiles": {
              "scope": "resource",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Post-migration file glob pattern. Executed by sorted filename order.",
              "required": true,
              "default": [],
              "example": [
                "*.post.pgsql"
              ]
            },
            "target": {
              "scope": "resource",
              "type": "string",
              "enum": [
                "all",
                "up/down"
              ],
              "default": "up/down",
              "description": "Specify target files to be migrated in the background. Default: 'up/down'"
            }
          },
          "scope": "resource",
          "default": null,
          "type": "object",
          "description": "If set, migrations will be applied for all analyses. If the current file is a migration file, execution will run until the previous migration."
        },
        "plpgsqlLanguageServer.enableExecuteFileQueryCommand": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Enable/Disable \"Execute the Current File Query\" command."
        },
        "plpgsqlLanguageServer.workspaceValidationTargetFiles": {
          "scope": "resource",
          "type": "array",
          "default": [],
          "description": "The pattern list of the workspace validation target files.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "plpgsqlLanguageServer.host",
        "plpgsqlLanguageServer.port",
        "plpgsqlLanguageServer.defaultSchema"
      ]
    }
  },
  "devDependencies": {
    "@types/node": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^6.18.0",
    "@typescript-eslint/parser": "^6.18.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "jest": "^29.7.0",
    "merge-options": "^3.0.4",
    "node-loader": "^2.0.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^5.3.3",
    "vsce": "^2.15.0",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.0",
    "webpack-node-externals": "^3.0.0"
  }
}
